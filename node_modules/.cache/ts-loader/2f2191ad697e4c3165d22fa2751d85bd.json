{"remainingRequest":"/Users/const/Documents/Movie/Slog/node_modules/thread-loader/dist/cjs.js!/Users/const/Documents/Movie/Slog/node_modules/babel-loader/lib/index.js!/Users/const/Documents/Movie/Slog/node_modules/ts-loader/index.js??ref--13-3!/Users/const/Documents/Movie/Slog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/const/Documents/Movie/Slog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Movie/Slog/src/components/Movie.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/const/Documents/Movie/Slog/src/components/Movie.vue","mtime":1572459224000},{"path":"/Users/const/Documents/Movie/Slog/node_modules/cache-loader/dist/cjs.js","mtime":1572459224000},{"path":"/Users/const/Documents/Movie/Slog/node_modules/thread-loader/dist/cjs.js","mtime":1572459224000},{"path":"/Users/const/Documents/Movie/Slog/node_modules/babel-loader/lib/index.js","mtime":1572459224000},{"path":"/Users/const/Documents/Movie/Slog/node_modules/ts-loader/index.js","mtime":1572459224000},{"path":"/Users/const/Documents/Movie/Slog/node_modules/cache-loader/dist/cjs.js","mtime":1572459224000},{"path":"/Users/const/Documents/Movie/Slog/node_modules/vue-loader/lib/index.js","mtime":1572459224000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _Date$now from \"/Users/const/Documents/Movie/Slog/node_modules/@babel/runtime-corejs2/core-js/date/now\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.number.constructor\";\nexport default {\n  name: 'Movie',\n  data: function data() {\n    return {\n      search: '',\n      select: 'aaa',\n      tableHeight: '',\n      movieData: [],\n      items: [{\n        type: 'primary',\n        label: '院线'\n      }, {\n        type: 'success',\n        label: '自制'\n      }, {\n        type: 'info',\n        label: '动作'\n      }, {\n        type: 'warning',\n        label: '喜剧'\n      }, {\n        type: 'danger',\n        label: '科幻'\n      }, {\n        type: 'primary',\n        label: '犯罪'\n      }, {\n        type: 'success',\n        label: '爱情'\n      }],\n      dialogAdd: false,\n      addForm: {\n        img: '',\n        imageUrl: '',\n        star: '',\n        score: '',\n        describe: '',\n        name: '',\n        series: [],\n        domains: [{\n          value: ''\n        }]\n      },\n      addRules: {\n        star: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 200,\n          message: '长度在 2 到 200 个字符',\n          trigger: 'blur'\n        }],\n        score: [{\n          required: true,\n          message: '请输入电影评分',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 10,\n          message: '长度在 2 到 10 个字符',\n          trigger: 'blur'\n        }],\n        describe: [{\n          required: true,\n          message: '请输入电影简介',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 500,\n          message: '长度在 1 到 500 个字符',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入电影名称',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 100,\n          message: '长度在 1 到 100 个字符',\n          trigger: 'blur'\n        }],\n        series: [{\n          type: 'array',\n          required: true,\n          message: '请至少选择一个类别',\n          trigger: 'change'\n        }]\n      },\n      dialogEdit: false,\n      editForm: {\n        id: Number,\n        index: Number,\n        img: '',\n        imageUrl: '',\n        star: '',\n        score: '',\n        describe: '',\n        name: '',\n        series: [],\n        domains: [{\n          value: ''\n        }]\n      },\n      editRules: {\n        star: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 200,\n          message: '长度在 2 到 200 个字符',\n          trigger: 'blur'\n        }],\n        score: [{\n          required: true,\n          message: '请输入电影评分',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 10,\n          message: '长度在 2 到 10 个字符',\n          trigger: 'blur'\n        }],\n        describe: [{\n          required: true,\n          message: '请输入电影简介',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 500,\n          message: '长度在 1 到 500 个字符',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入电影名称',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 100,\n          message: '长度在 1 到 100 个字符',\n          trigger: 'blur'\n        }],\n        series: [{\n          type: 'array',\n          required: true,\n          message: '请至少选择一个类别',\n          trigger: 'change'\n        }]\n      },\n      dialogDel: false,\n      delForm: {\n        index: Number,\n        id: ''\n      }\n    };\n  },\n  created: function created() {\n    var that = this;\n    that.$axios.post('/api/movie/list', {}, {}).then(function (res) {\n      console.log(res, '/api/movie/list');\n\n      if (res.data.length > 0) {\n        that.movieData = res.data;\n      } else {\n        that.dialogAdd = true;\n      }\n    }).catch(function (err) {\n      that.$toast(that, 'error', '网络错误～');\n      that.loading = false;\n    });\n  },\n  mounted: function mounted() {\n    var that = this;\n    that.tableHeight = that.$refs.movie.offsetHeight - that.$refs.search.offsetHeight - 80;\n  },\n  methods: {\n    onSearch: function onSearch() {\n      var that = this;\n\n      if (that.search) {\n        var data = {\n          search: that.search\n        };\n        that.$axios.post('/api/movie/search', that.$qs.stringify(data), {}).then(function (res) {\n          console.log(res, '/api/movie/search');\n\n          if (res.data.status) {\n            that.movieData = res.data.data;\n            that.$toast(that, 'success', res.data.message);\n          } else {\n            that.$toast(that, 'error', res.data.message);\n          }\n        }).catch(function (err) {\n          that.$toast(that, 'error', '网络错误～');\n          that.loading = false;\n        });\n      } else {\n        that.$toast(that, 'error', '请输入内容～');\n      }\n    },\n    onTag: function onTag(index) {\n      var that = this;\n      var data = {\n        tag: that.items[index].label\n      };\n      that.$axios.post('/api/movie/tag', that.$qs.stringify(data), {}).then(function (res) {\n        console.log(res, '/api/movie/tag');\n\n        if (res.data.status) {\n          that.movieData = res.data.data;\n          that.$toast(that, 'success', res.data.message);\n        } else {\n          that.$toast(that, 'error', res.data.message);\n        }\n      }).catch(function (err) {\n        that.$toast(that, 'error', '网络错误～');\n      });\n    },\n    onFilter: function onFilter(data, type) {\n      switch (type) {\n        case 1:\n          var _star = data.split(';');\n\n          var str = '';\n\n          for (var i = 0; i < _star.length; i++) {\n            str += '[' + _star[i] + ']';\n          }\n\n          return str;\n          break;\n\n        case 2:\n          console.log(data, '2222');\n          var list = '';\n\n          for (var _i = 0; _i < data.length; _i++) {\n            list += '[' + data[_i] + ']';\n          }\n\n          return list;\n          break;\n      }\n    },\n    addDomain: function addDomain(status) {\n      status ? this.addForm.domains.push({\n        value: '',\n        key: _Date$now()\n      }) : this.editForm.domains.push({\n        value: '',\n        key: _Date$now()\n      });\n    },\n    removeDomain: function removeDomain(item, status) {\n      if (status) {\n        var index = this.addForm.domains.indexOf(item);\n\n        if (index !== -1) {\n          this.addForm.domains.splice(index, 1);\n        }\n      } else {\n        var index = this.editForm.domains.indexOf(item);\n\n        if (index !== -1) {\n          this.editForm.domains.splice(index, 1);\n        }\n      }\n    },\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      var that = this;\n      var isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n      var isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        that.$toast(that, 'error', '上传头像图片只能是 JPG PNG 格式!');\n        return;\n      }\n\n      if (!isLt2M) {\n        that.$toast(that, 'error', '上传头像图片大小不能超过 2MB!');\n        return;\n      }\n\n      return isJPG && isLt2M;\n    },\n    handleAvatarSuccess: function handleAvatarSuccess(res, file) {\n      console.log(res, file, 'handleAvatarSuccess');\n\n      if (this.dialogAdd) {\n        this.addForm.img = res;\n        this.addForm.imageUrl = URL.createObjectURL(file.raw);\n      } else if (this.dialogEdit) {\n        this.editForm.img = res;\n        this.editForm.imageUrl = URL.createObjectURL(file.raw);\n      }\n    },\n    handleAdd: function handleAdd(index, row) {\n      this.dialogAdd = true;\n    },\n    onAddSubmit: function onAddSubmit(addForm) {\n      var that = this;\n      that.$refs[addForm].validate(function (valid) {\n        if (valid) {\n          that.$axios.post('/api/movie/add', that.$qs.stringify(that.addForm), {}).then(function (res) {\n            console.log(res, '/api/movie/add');\n\n            if (res.data.status) {\n              that.dialogAdd = false;\n              that.movieData.push(res.data.data[0]);\n              that.$toast(that, 'success', res.data.message);\n              console.log(that.movieData, 'movieData');\n            } else {\n              that.$toast(that, 'error', res.data.message);\n            }\n          }).catch(function (err) {\n            that.$toast(that, 'error', '网络错误～');\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleEdit: function handleEdit(index, row) {\n      this.editForm.id = row.id;\n      this.editForm.index = index;\n      this.editForm.img = row.poster;\n      this.editForm.imageUrl = row.img;\n      this.editForm.star = row.star;\n      this.editForm.score = row.score.toString();\n      this.editForm.describe = row.describe;\n      this.editForm.name = row.name;\n      this.editForm.series = row.series;\n      this.editForm.domains = row.domains;\n      this.dialogEdit = true;\n      console.log(index, row);\n    },\n    onEditSubmit: function onEditSubmit(editForm) {\n      var that = this;\n      that.$refs[editForm].validate(function (valid) {\n        if (valid) {\n          that.$axios.post('/api/movie/edit', that.$qs.stringify(that.editForm), {}).then(function (res) {\n            console.log(res, '/api/movie/edit');\n\n            if (res.data.status) {\n              that.dialogEdit = false;\n              that.movieData[that.editForm.index].img = res.data.data[0].img;\n              that.movieData[that.editForm.index].imageUrl = res.data.data[0].poster;\n              that.movieData[that.editForm.index].star = res.data.data[0].star;\n              that.movieData[that.editForm.index].score = res.data.data[0].score;\n              that.movieData[that.editForm.index].describe = res.data.data[0].describe;\n              that.movieData[that.editForm.index].name = res.data.data[0].name;\n              that.movieData[that.editForm.index].series = res.data.data[0].series;\n              that.movieData[that.editForm.index].domains = res.data.data[0].domains;\n              that.$toast(that, 'success', res.data.message);\n              console.log(that.movieData, 'movieData');\n            } else {\n              that.$toast(that, 'error', res.data.message);\n            }\n          }).catch(function (err) {\n            that.$toast(that, 'error', '网络错误～');\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleDelete: function handleDelete(index, row) {\n      console.log(index, row);\n      this.delForm.index = index;\n      this.delForm.id = row.id;\n      this.dialogDel = true;\n    },\n    onDelSubmit: function onDelSubmit() {\n      var that = this;\n      var data = {\n        'id': that.delForm.id\n      };\n      that.$axios.post('/api/movie/del', that.$qs.stringify(data), {}).then(function (res) {\n        console.log(res, '/api/movie/del');\n\n        if (res.data.status) {\n          that.movieData.splice(that.delForm.index, 1);\n          that.dialogDel = false;\n          that.$toast(that, 'success', res.data.message);\n        } else {\n          that.$toast(that, 'error', res.data.message);\n        }\n      }).catch(function (err) {\n        that.$toast(that, 'error', '网络错误～');\n      });\n    }\n  }\n};",null]}