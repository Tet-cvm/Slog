{"remainingRequest":"/Users/const/Documents/Movie/Slog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Movie/Slog/src/components/Manage.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/const/Documents/Movie/Slog/src/components/Manage.vue","mtime":1572459224000},{"path":"/Users/const/Documents/Movie/Slog/node_modules/babel-loader/lib/index.js","mtime":1572459224000},{"path":"/Users/const/Documents/Movie/Slog/node_modules/ts-loader/index.js","mtime":1572459224000},{"path":"/Users/const/Documents/Movie/Slog/node_modules/cache-loader/dist/cjs.js","mtime":1572459224000},{"path":"/Users/const/Documents/Movie/Slog/node_modules/vue-loader/lib/index.js","mtime":1572459224000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default {\n    name: 'Manage',\n    data() {\n        return {\n            tableHeight: '',\n            manageData: [],\n            dialogAdd: false,\n            addForm: {\n                img: '',\n                imageUrl: '',\n                role: '',\n                name: '',\n                pwd: ''\n            },\n            addRules: {\n                role: [\n                    { required: true, message: '请至少选择一个活动性质', trigger: 'change' }\n                ],\n                name: [\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\n                    { min: 5, max: 10, message: '长度在 5 到 10 个字符', trigger: 'blur' }\n                ],\n                pwd: [\n                    { required: true, message: '请输入密码', trigger: 'blur' },\n                    { min: 6, max: 12, message: '长度在 6 到 12 个字符', trigger: 'blur' }\n                ]\n            },\n            dialogEdit: false,\n            editForm: {\n                index: Number,\n                unionid: '',\n                img: '',\n                imageUrl: '',\n                role: '',\n                name: '',\n                pwd: '******'\n            },\n            editRules: {\n                role: [\n                    { required: true, message: '请至少选择一个活动性质', trigger: 'change' }\n                ],\n                name: [\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\n                    { min: 5, max: 10, message: '长度在 5 到 10 个字符', trigger: 'blur' }\n                ],\n                pwd: [\n                    { required: true, message: '请输入密码', trigger: 'blur' },\n                    { min: 6, max: 12, message: '长度在 6 到 12 个字符', trigger: 'blur' }\n                ]\n            },\n            dialogDel: false,\n            delForm: {\n                index: Number,\n                unionid: ''\n            }\n        }\n    },\n    created() {\n        let that = this;\n        that.$axios.post('/api/manage/list', {}, {})\n        .then(function(res){\n            that.manageData = res.data;\n        })\n        .catch(function(err) {\n            that.$toast(that, 'error', '网络错误～');\n        })\n    },\n    mounted() {\n        let that = this;\n        that.tableHeight = that.$refs.manage.offsetHeight;\n    },\n    methods: {\n        onFilter: function(role) {\n            switch(role)\n            {\n                case 0:\n                    return '超级管理员';\n                case 1:\n                    return '管理员';\n                case 2:\n                    return '文案编辑';\n            }\n        },\n        handleAdd(index, row) {\n            this.dialogAdd = true;\n        },\n        beforeAvatarUpload(file) {\n            let that = this;\n            const isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n            const isLt1M = file.size / 1024 / 1024 < 1;\n\n            if (!isJPG) {\n                that.$toast(that, 'error', '上传头像图片只能是 JPG PNG 格式!');\n                return;\n            }\n            if (!isLt1M) {\n                that.$toast(that, 'error', '上传头像图片大小不能超过 1MB!');\n                return;\n            }\n            return isJPG && isLt1M;\n        },\n        handleAvatarSuccess(res, file) {\n            if (this.dialogAdd) {\n                this.addForm.img = res;\n                this.addForm.imageUrl = URL.createObjectURL(file.raw);\n            } else if (this.dialogEdit) {\n                this.editForm.img = res;\n                this.editForm.imageUrl = URL.createObjectURL(file.raw);\n            }\n        },\n        onAddSubmit(addForm) {\n            let that = this;\n            that.$refs[addForm].validate((valid)=>{\n                if (valid) {\n                    that.$axios.post('/api/manage/add', that.$qs.stringify(that.addForm), {})\n                    .then(function(res){\n                        if (res.data.status) {\n                            that.dialogAdd = false;\n                            that.manageData.push(res.data.data[0]);\n                            that.$toast(that, 'success', res.data.message);\n                        } else {\n                            that.$toast(that, 'error', res.data.message);\n                        }\n                    })\n                    .catch(function(err) {\n                        that.$toast(that, 'error', '网络错误～');\n                    })\n                } else {\n                    return false;\n                }\n            })\n        },\n        handleEdit(index, row) {\n            this.editForm.index = index;\n            this.editForm.unionid = this.manageData[index].unionid;\n            this.editForm.img = this.manageData[index].img;\n            this.editForm.imageUrl = this.manageData[index].icon;\n            this.editForm.role = this.manageData[index].role.toString();\n            this.editForm.name = this.manageData[index].name;\n            this.dialogEdit = true;\n        },\n        onEditSubmit(editForm) {\n            let that = this;\n            that.$refs[editForm].validate((valid)=>{\n                if (valid) {\n                    that.$axios.post('/api/manage/edit', that.$qs.stringify(that.editForm), {})\n                    .then(function(res){\n                        if (res.data.status) {\n                            that.manageData[that.editForm.index].role = res.data.data[0].role;\n                            that.manageData[that.editForm.index].name = res.data.data[0].name;\n                            that.manageData[that.editForm.index].time = res.data.data[0].time;\n                            that.manageData[that.editForm.index].img = res.data.data[0].img;\n                            that.manageData[that.editForm.index].icon = res.data.data[0].icon;\n                            that.dialogEdit = false;\n                            that.$toast(that, 'success', res.data.message);\n                        } else {\n                            that.$toast(that, 'error', res.data.message);\n                        }\n                    })\n                    .catch(function(err) {\n                        that.$toast(that, 'error', '网络错误～');\n                    })\n                } else {\n                    return false;\n                }\n            })\n        },\n        handleDelete(index, row) {\n            this.delForm.index = index;\n            this.delForm.unionid = row.unionid;\n            this.dialogDel = true;\n        },\n        onDelSubmit() {\n            let that = this;\n            let data = {\n                'unionid': that.delForm.unionid\n            }\n            that.$axios.post('/api/manage/del', that.$qs.stringify(data), {})\n            .then(function(res){\n                if (res.data.status) {\n                    that.manageData.splice(that.delForm.index, 1);\n                    that.dialogDel = false;\n                    that.$toast(that, 'success', res.data.message);\n                } else {\n                    that.$toast(that, 'error', res.data.message);\n                }\n            })\n            .catch(function(err) {\n                that.$toast(that, 'error', '网络错误～');\n            })\n        }\n    }\n}\n",null]}