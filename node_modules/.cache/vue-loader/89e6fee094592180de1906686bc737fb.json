{"remainingRequest":"/Users/const/Documents/Movie/Slog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/const/Documents/Movie/Slog/src/components/Movie.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/const/Documents/Movie/Slog/src/components/Movie.vue","mtime":1572459224000},{"path":"/Users/const/Documents/Movie/Slog/node_modules/babel-loader/lib/index.js","mtime":1572459224000},{"path":"/Users/const/Documents/Movie/Slog/node_modules/ts-loader/index.js","mtime":1572459224000},{"path":"/Users/const/Documents/Movie/Slog/node_modules/cache-loader/dist/cjs.js","mtime":1572459224000},{"path":"/Users/const/Documents/Movie/Slog/node_modules/vue-loader/lib/index.js","mtime":1572459224000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default {\n    name: 'Movie',\n    data() {\n        return {\n            search: '',\n            select: 'aaa',\n            tableHeight: '',\n            movieData: [],\n            items: [\n                { type: 'primary', label: '院线' },\n                { type: 'success', label: '自制' },\n                { type: 'info', label: '动作' },\n                { type: 'warning', label: '喜剧' },\n                { type: 'danger', label: '科幻' },\n                { type: 'primary', label: '犯罪' },\n                { type: 'success', label: '爱情' }\n            ],\n            dialogAdd: false,\n            addForm: {\n                img: '',\n                imageUrl: '',\n                star: '',\n                score: '',\n                describe: '',\n                name: '',\n                series: [],\n                domains: [{value: ''}],\n            },\n            addRules: {\n                star: [\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\n                    { min: 2, max: 200, message: '长度在 2 到 200 个字符', trigger: 'blur' }\n                ],\n                score: [\n                    { required: true, message: '请输入电影评分', trigger: 'blur' },\n                    { min: 2, max: 10, message: '长度在 2 到 10 个字符', trigger: 'blur' }\n                ],\n                describe: [\n                    { required: true, message: '请输入电影简介', trigger: 'blur' },\n                    { min: 1, max: 500, message: '长度在 1 到 500 个字符', trigger: 'blur' }\n                ],\n                name: [\n                    { required: true, message: '请输入电影名称', trigger: 'blur' },\n                    { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                ],\n                series: [\n                    { type: 'array', required: true, message: '请至少选择一个类别', trigger: 'change' }\n                ]\n            },\n            dialogEdit: false,\n            editForm: {\n                id: Number,\n                index: Number,\n                img: '',\n                imageUrl: '',\n                star: '',\n                score: '',\n                describe: '',\n                name: '',\n                series: [],\n                domains: [{value: ''}],\n            },\n            editRules: {\n                star: [\n                    { required: true, message: '请输入用户名', trigger: 'blur' },\n                    { min: 2, max: 200, message: '长度在 2 到 200 个字符', trigger: 'blur' }\n                ],\n                score: [\n                    { required: true, message: '请输入电影评分', trigger: 'blur' },\n                    { min: 2, max: 10, message: '长度在 2 到 10 个字符', trigger: 'blur' }\n                ],\n                describe: [\n                    { required: true, message: '请输入电影简介', trigger: 'blur' },\n                    { min: 1, max: 500, message: '长度在 1 到 500 个字符', trigger: 'blur' }\n                ],\n                name: [\n                    { required: true, message: '请输入电影名称', trigger: 'blur' },\n                    { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                ],\n                series: [\n                    { type: 'array', required: true, message: '请至少选择一个类别', trigger: 'change' }\n                ]\n            },\n            dialogDel: false,\n            delForm: {\n                index: Number,\n                id: ''\n            }\n        }\n    },\n    created() {\n        let that = this;\n        that.$axios.post('/api/movie/list', {}, {})\n        .then(function(res) {\n            console.log(res, '/api/movie/list');\n            if (res.data.length > 0) {\n                that.movieData = res.data;\n            } else {\n                that.dialogAdd = true;\n            }\n        })\n        .catch(function(err) {\n            that.$toast(that, 'error', '网络错误～');\n            that.loading = false;\n        })\n    },\n    mounted() {\n        let that = this;\n        that.tableHeight = that.$refs.movie.offsetHeight - that.$refs.search.offsetHeight - 80;\n    },\n    methods: {\n        onSearch() {\n            let that = this;\n            if (that.search) {\n                let data = {\n                    search: that.search\n                }\n                that.$axios.post('/api/movie/search', that.$qs.stringify(data), {})\n                .then(function(res) {\n                    console.log(res, '/api/movie/search');\n                    if (res.data.status) {\n                        that.movieData = res.data.data;\n                        that.$toast(that, 'success', res.data.message);\n                    } else {\n                        that.$toast(that, 'error', res.data.message);\n                    }\n                })\n                .catch(function(err) {\n                    that.$toast(that, 'error', '网络错误～');\n                    that.loading = false;\n                })\n            } else {\n                that.$toast(that, 'error', '请输入内容～');\n            }\n        },\n        onTag: function(index) {\n            let that = this;\n            let data = {\n                tag: that.items[index].label\n            }\n            that.$axios.post('/api/movie/tag', that.$qs.stringify(data), {})\n            .then(function(res) {\n                console.log(res, '/api/movie/tag');\n                if (res.data.status) {\n                    that.movieData = res.data.data;\n                    that.$toast(that, 'success', res.data.message);\n                } else {\n                    that.$toast(that, 'error', res.data.message);\n                }\n            })\n            .catch(function(err) {\n                that.$toast(that, 'error', '网络错误～');\n            })\n        },\n        onFilter(data, type) {\n            switch(type)\n            {\n                case 1:\n                    let _star = data.split(';');\n                    let str = '';\n                    for(let i = 0; i<_star.length; i++) {\n                        str += '[' + _star[i] + ']';\n                    }\n                    return str;\n                    break;\n                case 2:\n                    console.log(data, '2222');\n                    let list = '';\n                    for (let i=0; i<data.length; i++) {\n                        list += '[' + data[i] + ']';\n                    }\n                    return list;\n                    break;\n            }\n\n\n        },\n        addDomain(status) {\n            status ? this.addForm.domains.push({value: '',key: Date.now()}) : this.editForm.domains.push({value: '',key: Date.now()});\n        },\n        removeDomain(item, status) {\n            if (status) {\n                var index = this.addForm.domains.indexOf(item)\n                if (index !== -1) {\n                    this.addForm.domains.splice(index, 1)\n                }\n            } else {\n                var index = this.editForm.domains.indexOf(item)\n                if (index !== -1) {\n                    this.editForm.domains.splice(index, 1)\n                }\n            }\n        },\n        beforeAvatarUpload(file) {\n            let that = this;\n            const isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n            const isLt2M = file.size / 1024 / 1024 < 2;\n\n            if (!isJPG) {\n                that.$toast(that, 'error', '上传头像图片只能是 JPG PNG 格式!');\n                return;\n            }\n            if (!isLt2M) {\n                that.$toast(that, 'error', '上传头像图片大小不能超过 2MB!');\n                return;\n            }\n            return isJPG && isLt2M;\n        },\n        handleAvatarSuccess(res, file) {\n            console.log(res, file, 'handleAvatarSuccess');\n            if (this.dialogAdd) {\n                this.addForm.img = res;\n                this.addForm.imageUrl = URL.createObjectURL(file.raw);\n            } else if (this.dialogEdit) {\n                this.editForm.img = res;\n                this.editForm.imageUrl = URL.createObjectURL(file.raw);\n            }\n        },\n        handleAdd(index, row) {\n            this.dialogAdd = true;\n        },\n        onAddSubmit(addForm) {\n            let that = this;\n            that.$refs[addForm].validate((valid)=>{\n                if (valid) {\n                    that.$axios.post('/api/movie/add', that.$qs.stringify(that.addForm), {})\n                    .then(function(res){\n                        console.log(res, '/api/movie/add');\n                        if (res.data.status) {\n                            that.dialogAdd = false;\n                            that.movieData.push(res.data.data[0]);\n                            that.$toast(that, 'success', res.data.message);\n                            console.log(that.movieData, 'movieData');\n                        } else {\n                            that.$toast(that, 'error', res.data.message);\n                        }\n                    })\n                    .catch(function(err) {\n                        that.$toast(that, 'error', '网络错误～');\n                    })\n                } else {\n                    return false;\n                }\n            })\n        },\n        handleEdit(index, row) {\n            this.editForm.id = row.id;\n            this.editForm.index = index;\n            this.editForm.img = row.poster;\n            this.editForm.imageUrl = row.img;\n            this.editForm.star = row.star;\n            this.editForm.score = row.score.toString();\n            this.editForm.describe = row.describe;\n            this.editForm.name = row.name;\n            this.editForm.series = row.series;\n            this.editForm.domains = row.domains;\n            this.dialogEdit = true;\n            console.log(index, row);\n        },\n        onEditSubmit(editForm) {\n            let that = this;\n            that.$refs[editForm].validate((valid)=>{\n                if (valid) {\n                    that.$axios.post('/api/movie/edit', that.$qs.stringify(that.editForm), {})\n                    .then(function(res){\n                        console.log(res, '/api/movie/edit');\n                        if (res.data.status) {\n                            that.dialogEdit = false;\n                            that.movieData[that.editForm.index].img = res.data.data[0].img;\n                            that.movieData[that.editForm.index].imageUrl = res.data.data[0].poster;\n                            that.movieData[that.editForm.index].star = res.data.data[0].star;\n                            that.movieData[that.editForm.index].score = res.data.data[0].score;\n                            that.movieData[that.editForm.index].describe = res.data.data[0].describe;\n                            that.movieData[that.editForm.index].name = res.data.data[0].name;\n                            that.movieData[that.editForm.index].series = res.data.data[0].series;\n                            that.movieData[that.editForm.index].domains = res.data.data[0].domains;\n                            that.$toast(that, 'success', res.data.message);\n                            console.log(that.movieData, 'movieData');\n                        } else {\n                            that.$toast(that, 'error', res.data.message);\n                        }\n                    })\n                    .catch(function(err) {\n                        that.$toast(that, 'error', '网络错误～');\n                    })\n                } else {\n                    return false;\n                }\n            })\n        },\n        handleDelete(index, row) {\n            console.log(index, row); \n            this.delForm.index = index;\n            this.delForm.id = row.id;\n            this.dialogDel = true;\n        },\n        onDelSubmit() {\n            let that = this;\n            let data = {\n                'id': that.delForm.id\n            }\n            that.$axios.post('/api/movie/del', that.$qs.stringify(data), {})\n            .then(function(res){\n                console.log(res, '/api/movie/del');\n                if (res.data.status) {\n                    that.movieData.splice(that.delForm.index, 1);\n                    that.dialogDel = false;\n                    that.$toast(that, 'success', res.data.message);\n                } else {\n                    that.$toast(that, 'error', res.data.message);\n                }\n            })\n            .catch(function(err) {\n                that.$toast(that, 'error', '网络错误～');\n            })\n        }\n    }\n}\n",null]}